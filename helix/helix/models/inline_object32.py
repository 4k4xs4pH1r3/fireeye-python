# coding: utf-8

"""
    Helix API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from helix.configuration import Configuration


class InlineObject32(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'status': 'str',
        'classification': 'str',
        'info_links': 'list[str]',
        'tags': 'list[str]',
        'create_date': 'str',
        'description': 'str',
        'alert': 'list[str]',
        'name': 'str',
        'priority': 'str',
        'update_date': 'str',
        'is_hidden': 'bool',
        'customer_id': 'str',
        'severity': 'int'
    }

    attribute_map = {
        'status': 'status',
        'classification': 'classification',
        'info_links': 'infoLinks',
        'tags': 'tags',
        'create_date': 'createDate',
        'description': 'description',
        'alert': '_alert',
        'name': 'name',
        'priority': 'priority',
        'update_date': 'updateDate',
        'is_hidden': 'is_hidden',
        'customer_id': 'customer_id',
        'severity': 'severity'
    }

    def __init__(self, status=None, classification=None, info_links=None, tags=None, create_date=None, description=None, alert=None, name=None, priority=None, update_date=None, is_hidden=None, customer_id=None, severity=None, local_vars_configuration=None):  # noqa: E501
        """InlineObject32 - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._status = None
        self._classification = None
        self._info_links = None
        self._tags = None
        self._create_date = None
        self._description = None
        self._alert = None
        self._name = None
        self._priority = None
        self._update_date = None
        self._is_hidden = None
        self._customer_id = None
        self._severity = None
        self.discriminator = None

        if status is not None:
            self.status = status
        if classification is not None:
            self.classification = classification
        if info_links is not None:
            self.info_links = info_links
        if tags is not None:
            self.tags = tags
        if create_date is not None:
            self.create_date = create_date
        if description is not None:
            self.description = description
        if alert is not None:
            self.alert = alert
        if name is not None:
            self.name = name
        if priority is not None:
            self.priority = priority
        if update_date is not None:
            self.update_date = update_date
        if is_hidden is not None:
            self.is_hidden = is_hidden
        if customer_id is not None:
            self.customer_id = customer_id
        if severity is not None:
            self.severity = severity

    @property
    def status(self):
        """Gets the status of this InlineObject32.  # noqa: E501

          # noqa: E501

        :return: The status of this InlineObject32.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InlineObject32.

          # noqa: E501

        :param status: The status of this InlineObject32.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def classification(self):
        """Gets the classification of this InlineObject32.  # noqa: E501

          # noqa: E501

        :return: The classification of this InlineObject32.  # noqa: E501
        :rtype: str
        """
        return self._classification

    @classification.setter
    def classification(self, classification):
        """Sets the classification of this InlineObject32.

          # noqa: E501

        :param classification: The classification of this InlineObject32.  # noqa: E501
        :type: str
        """

        self._classification = classification

    @property
    def info_links(self):
        """Gets the info_links of this InlineObject32.  # noqa: E501

          # noqa: E501

        :return: The info_links of this InlineObject32.  # noqa: E501
        :rtype: list[str]
        """
        return self._info_links

    @info_links.setter
    def info_links(self, info_links):
        """Sets the info_links of this InlineObject32.

          # noqa: E501

        :param info_links: The info_links of this InlineObject32.  # noqa: E501
        :type: list[str]
        """

        self._info_links = info_links

    @property
    def tags(self):
        """Gets the tags of this InlineObject32.  # noqa: E501

          # noqa: E501

        :return: The tags of this InlineObject32.  # noqa: E501
        :rtype: list[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this InlineObject32.

          # noqa: E501

        :param tags: The tags of this InlineObject32.  # noqa: E501
        :type: list[str]
        """

        self._tags = tags

    @property
    def create_date(self):
        """Gets the create_date of this InlineObject32.  # noqa: E501

          # noqa: E501

        :return: The create_date of this InlineObject32.  # noqa: E501
        :rtype: str
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this InlineObject32.

          # noqa: E501

        :param create_date: The create_date of this InlineObject32.  # noqa: E501
        :type: str
        """

        self._create_date = create_date

    @property
    def description(self):
        """Gets the description of this InlineObject32.  # noqa: E501

          # noqa: E501

        :return: The description of this InlineObject32.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InlineObject32.

          # noqa: E501

        :param description: The description of this InlineObject32.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def alert(self):
        """Gets the alert of this InlineObject32.  # noqa: E501

          # noqa: E501

        :return: The alert of this InlineObject32.  # noqa: E501
        :rtype: list[str]
        """
        return self._alert

    @alert.setter
    def alert(self, alert):
        """Sets the alert of this InlineObject32.

          # noqa: E501

        :param alert: The alert of this InlineObject32.  # noqa: E501
        :type: list[str]
        """

        self._alert = alert

    @property
    def name(self):
        """Gets the name of this InlineObject32.  # noqa: E501

          # noqa: E501

        :return: The name of this InlineObject32.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineObject32.

          # noqa: E501

        :param name: The name of this InlineObject32.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def priority(self):
        """Gets the priority of this InlineObject32.  # noqa: E501

          # noqa: E501

        :return: The priority of this InlineObject32.  # noqa: E501
        :rtype: str
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this InlineObject32.

          # noqa: E501

        :param priority: The priority of this InlineObject32.  # noqa: E501
        :type: str
        """

        self._priority = priority

    @property
    def update_date(self):
        """Gets the update_date of this InlineObject32.  # noqa: E501

          # noqa: E501

        :return: The update_date of this InlineObject32.  # noqa: E501
        :rtype: str
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this InlineObject32.

          # noqa: E501

        :param update_date: The update_date of this InlineObject32.  # noqa: E501
        :type: str
        """

        self._update_date = update_date

    @property
    def is_hidden(self):
        """Gets the is_hidden of this InlineObject32.  # noqa: E501

          # noqa: E501

        :return: The is_hidden of this InlineObject32.  # noqa: E501
        :rtype: bool
        """
        return self._is_hidden

    @is_hidden.setter
    def is_hidden(self, is_hidden):
        """Sets the is_hidden of this InlineObject32.

          # noqa: E501

        :param is_hidden: The is_hidden of this InlineObject32.  # noqa: E501
        :type: bool
        """

        self._is_hidden = is_hidden

    @property
    def customer_id(self):
        """Gets the customer_id of this InlineObject32.  # noqa: E501

          # noqa: E501

        :return: The customer_id of this InlineObject32.  # noqa: E501
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this InlineObject32.

          # noqa: E501

        :param customer_id: The customer_id of this InlineObject32.  # noqa: E501
        :type: str
        """

        self._customer_id = customer_id

    @property
    def severity(self):
        """Gets the severity of this InlineObject32.  # noqa: E501

          # noqa: E501

        :return: The severity of this InlineObject32.  # noqa: E501
        :rtype: int
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this InlineObject32.

          # noqa: E501

        :param severity: The severity of this InlineObject32.  # noqa: E501
        :type: int
        """

        self._severity = severity

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineObject32):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineObject32):
            return True

        return self.to_dict() != other.to_dict()
