# coding: utf-8

"""
    Helix API Documentation

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import helix
from helix.api.v3_api import V3Api  # noqa: E501
from helix.rest import ApiException


class TestV3Api(unittest.TestCase):
    """V3Api unit test stubs"""

    def setUp(self):
        self.api = helix.api.v3_api.V3Api()  # noqa: E501

    def tearDown(self):
        pass

    def test_v3_alerts_cases_create(self):
        """Test case for v3_alerts_cases_create

        """
        pass

    def test_v3_alerts_cases_delete(self):
        """Test case for v3_alerts_cases_delete

        """
        pass

    def test_v3_alerts_cases_delete_0(self):
        """Test case for v3_alerts_cases_delete_0

        """
        pass

    def test_v3_alerts_cases_list(self):
        """Test case for v3_alerts_cases_list

        """
        pass

    def test_v3_alerts_cases_partial_update(self):
        """Test case for v3_alerts_cases_partial_update

        """
        pass

    def test_v3_alerts_cases_partial_update0(self):
        """Test case for v3_alerts_cases_partial_update0

        """
        pass

    def test_v3_alerts_cases_read(self):
        """Test case for v3_alerts_cases_read

        """
        pass

    def test_v3_alerts_cases_search(self):
        """Test case for v3_alerts_cases_search

        """
        pass

    def test_v3_alerts_create(self):
        """Test case for v3_alerts_create

        """
        pass

    def test_v3_alerts_get_enum_fields(self):
        """Test case for v3_alerts_get_enum_fields

        Lists all fields that describe alerts.  # noqa: E501
        """
        pass

    def test_v3_alerts_get_events(self):
        """Test case for v3_alerts_get_events

        Lists alert events for a specific alert.  # noqa: E501
        """
        pass

    def test_v3_alerts_get_hx_host_endpoints(self):
        """Test case for v3_alerts_get_hx_host_endpoints

        Retrieves a specific alert from an HX endpoint.  # noqa: E501
        """
        pass

    def test_v3_alerts_get_intel_context(self):
        """Test case for v3_alerts_get_intel_context

        Gets the instances and indicators for a specific alert.  # noqa: E501
        """
        pass

    def test_v3_alerts_get_investigative_tips(self):
        """Test case for v3_alerts_get_investigative_tips

        Lists the investigative tips for a specific alert.  # noqa: E501
        """
        pass

    def test_v3_alerts_get_md_investigation_results(self):
        """Test case for v3_alerts_get_md_investigation_results

        Retrieves Managed Defense investigation results for an alert.  # noqa: E501
        """
        pass

    def test_v3_alerts_get_org_metrics(self):
        """Test case for v3_alerts_get_org_metrics

        Lists alert metrics by organization.  # noqa: E501
        """
        pass

    def test_v3_alerts_get_revisions(self):
        """Test case for v3_alerts_get_revisions

        Returns the revision history.  # noqa: E501
        """
        pass

    def test_v3_alerts_get_unique_values(self):
        """Test case for v3_alerts_get_unique_values

        Lists the number of occurrences of each field value.  # noqa: E501
        """
        pass

    def test_v3_alerts_list(self):
        """Test case for v3_alerts_list

        """
        pass

    def test_v3_alerts_notes_create(self):
        """Test case for v3_alerts_notes_create

        Adds a note to the specified alert or case.  # noqa: E501
        """
        pass

    def test_v3_alerts_notes_delete(self):
        """Test case for v3_alerts_notes_delete

        Deletes the specified note.  # noqa: E501
        """
        pass

    def test_v3_alerts_notes_list(self):
        """Test case for v3_alerts_notes_list

        """
        pass

    def test_v3_alerts_notes_partial_update(self):
        """Test case for v3_alerts_notes_partial_update

        """
        pass

    def test_v3_alerts_notes_partial_update0(self):
        """Test case for v3_alerts_notes_partial_update0

        """
        pass

    def test_v3_alerts_notes_read(self):
        """Test case for v3_alerts_notes_read

        """
        pass

    def test_v3_alerts_plays_list(self):
        """Test case for v3_alerts_plays_list

        """
        pass

    def test_v3_alerts_plays_read(self):
        """Test case for v3_alerts_plays_read

        """
        pass

    def test_v3_alerts_plays_search(self):
        """Test case for v3_alerts_plays_search

        """
        pass

    def test_v3_alerts_read(self):
        """Test case for v3_alerts_read

        """
        pass

    def test_v3_alerts_search(self):
        """Test case for v3_alerts_search

        """
        pass

    def test_v3_alerts_types_create(self):
        """Test case for v3_alerts_types_create

        """
        pass

    def test_v3_alerts_types_delete(self):
        """Test case for v3_alerts_types_delete

        """
        pass

    def test_v3_alerts_types_list(self):
        """Test case for v3_alerts_types_list

        """
        pass

    def test_v3_alerts_types_partial_update(self):
        """Test case for v3_alerts_types_partial_update

        """
        pass

    def test_v3_alerts_types_partial_update0(self):
        """Test case for v3_alerts_types_partial_update0

        """
        pass

    def test_v3_alerts_types_read(self):
        """Test case for v3_alerts_types_read

        """
        pass

    def test_v3_alerts_types_search(self):
        """Test case for v3_alerts_types_search

        """
        pass

    def test_v3_appliances_get_appliance_health(self):
        """Test case for v3_appliances_get_appliance_health

        Provides a summary of the health of your FireEye network appliances.  # noqa: E501
        """
        pass

    def test_v3_appliances_list(self):
        """Test case for v3_appliances_list

        """
        pass

    def test_v3_appliances_read(self):
        """Test case for v3_appliances_read

        Searches for appliance by ID (the deviceid from GET /appliances).  # noqa: E501
        """
        pass

    def test_v3_automation_jobs_artifacts_create(self):
        """Test case for v3_automation_jobs_artifacts_create

        Overrides the default 'create' method in order to associate the  # noqa: E501
        """
        pass

    def test_v3_automation_jobs_artifacts_delete(self):
        """Test case for v3_automation_jobs_artifacts_delete

        """
        pass

    def test_v3_automation_jobs_artifacts_list(self):
        """Test case for v3_automation_jobs_artifacts_list

        """
        pass

    def test_v3_automation_jobs_artifacts_partial_update(self):
        """Test case for v3_automation_jobs_artifacts_partial_update

        """
        pass

    def test_v3_automation_jobs_artifacts_partial_update0(self):
        """Test case for v3_automation_jobs_artifacts_partial_update0

        """
        pass

    def test_v3_automation_jobs_artifacts_read(self):
        """Test case for v3_automation_jobs_artifacts_read

        """
        pass

    def test_v3_automation_jobs_artifacts_search(self):
        """Test case for v3_automation_jobs_artifacts_search

        """
        pass

    def test_v3_automation_jobs_create(self):
        """Test case for v3_automation_jobs_create

        """
        pass

    def test_v3_automation_jobs_delete(self):
        """Test case for v3_automation_jobs_delete

        """
        pass

    def test_v3_automation_jobs_list(self):
        """Test case for v3_automation_jobs_list

        """
        pass

    def test_v3_automation_jobs_partial_update(self):
        """Test case for v3_automation_jobs_partial_update

        """
        pass

    def test_v3_automation_jobs_partial_update0(self):
        """Test case for v3_automation_jobs_partial_update0

        """
        pass

    def test_v3_automation_jobs_read(self):
        """Test case for v3_automation_jobs_read

        """
        pass

    def test_v3_automation_jobs_search(self):
        """Test case for v3_automation_jobs_search

        """
        pass

    def test_v3_cases_alerts_create(self):
        """Test case for v3_cases_alerts_create

        Alerts associated with a case.  # noqa: E501
        """
        pass

    def test_v3_cases_alerts_delete(self):
        """Test case for v3_cases_alerts_delete

        Removes all alerts from a case.  # noqa: E501
        """
        pass

    def test_v3_cases_alerts_delete_0(self):
        """Test case for v3_cases_alerts_delete_0

        Removes the specified alert from a case.  # noqa: E501
        """
        pass

    def test_v3_cases_alerts_list(self):
        """Test case for v3_cases_alerts_list

        Alerts associated with a case.  # noqa: E501
        """
        pass

    def test_v3_cases_alerts_partial_update(self):
        """Test case for v3_cases_alerts_partial_update

        Alerts associated with a case.  # noqa: E501
        """
        pass

    def test_v3_cases_alerts_partial_update0(self):
        """Test case for v3_cases_alerts_partial_update0

        Alerts associated with a case.  # noqa: E501
        """
        pass

    def test_v3_cases_alerts_read(self):
        """Test case for v3_cases_alerts_read

        Alerts associated with a case.  # noqa: E501
        """
        pass

    def test_v3_cases_alerts_search(self):
        """Test case for v3_cases_alerts_search

        Alerts associated with a case.  # noqa: E501
        """
        pass

    def test_v3_cases_alerts_update(self):
        """Test case for v3_cases_alerts_update

        Alerts associated with a case.  # noqa: E501
        """
        pass

    def test_v3_cases_create(self):
        """Test case for v3_cases_create

        """
        pass

    def test_v3_cases_delete(self):
        """Test case for v3_cases_delete

        """
        pass

    def test_v3_cases_export_all(self):
        """Test case for v3_cases_export_all

        Creates an export file in JSON format.  # noqa: E501
        """
        pass

    def test_v3_cases_export_single(self):
        """Test case for v3_cases_export_single

        Exports the specified case to a JSON file.  # noqa: E501
        """
        pass

    def test_v3_cases_get_all_existing_case_statuses_with_counts(self):
        """Test case for v3_cases_get_all_existing_case_statuses_with_counts

        Returns an object containing various status values with their respective counts.  # noqa: E501
        """
        pass

    def test_v3_cases_get_all_tags(self):
        """Test case for v3_cases_get_all_tags

        Retrieves the number of tags associated with cases and the tags themselves.  # noqa: E501
        """
        pass

    def test_v3_cases_get_revisions(self):
        """Test case for v3_cases_get_revisions

        Returns the revision history.  # noqa: E501
        """
        pass

    def test_v3_cases_list(self):
        """Test case for v3_cases_list

        """
        pass

    def test_v3_cases_notes_create(self):
        """Test case for v3_cases_notes_create

        Adds a note to the specified alert or case.  # noqa: E501
        """
        pass

    def test_v3_cases_notes_delete(self):
        """Test case for v3_cases_notes_delete

        Deletes the specified note.  # noqa: E501
        """
        pass

    def test_v3_cases_notes_list(self):
        """Test case for v3_cases_notes_list

        """
        pass

    def test_v3_cases_notes_partial_update(self):
        """Test case for v3_cases_notes_partial_update

        """
        pass

    def test_v3_cases_notes_partial_update0(self):
        """Test case for v3_cases_notes_partial_update0

        """
        pass

    def test_v3_cases_notes_read(self):
        """Test case for v3_cases_notes_read

        """
        pass

    def test_v3_cases_partial_update(self):
        """Test case for v3_cases_partial_update

        """
        pass

    def test_v3_cases_partial_update0(self):
        """Test case for v3_cases_partial_update0

        """
        pass

    def test_v3_cases_read(self):
        """Test case for v3_cases_read

        """
        pass

    def test_v3_cases_search(self):
        """Test case for v3_cases_search

        """
        pass

    def test_v3_dashboards_clone(self):
        """Test case for v3_dashboards_clone

        Clones the specified dashboard, including all widgets.  # noqa: E501
        """
        pass

    def test_v3_dashboards_create(self):
        """Test case for v3_dashboards_create

        Creates a dashboard.  # noqa: E501
        """
        pass

    def test_v3_dashboards_delete(self):
        """Test case for v3_dashboards_delete

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_favorite_create(self):
        """Test case for v3_dashboards_favorite_create

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_favorite_delete(self):
        """Test case for v3_dashboards_favorite_delete

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_favorite_delete_0(self):
        """Test case for v3_dashboards_favorite_delete_0

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_favorite_list(self):
        """Test case for v3_dashboards_favorite_list

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_favorite_partial_update(self):
        """Test case for v3_dashboards_favorite_partial_update

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_favorite_partial_update0(self):
        """Test case for v3_dashboards_favorite_partial_update0

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_favorite_read(self):
        """Test case for v3_dashboards_favorite_read

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_favorite_update(self):
        """Test case for v3_dashboards_favorite_update

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_get_all_tags(self):
        """Test case for v3_dashboards_get_all_tags

        Lists all tags associated with dashboards.  # noqa: E501
        """
        pass

    def test_v3_dashboards_list(self):
        """Test case for v3_dashboards_list

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_partial_update(self):
        """Test case for v3_dashboards_partial_update

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_partial_update0(self):
        """Test case for v3_dashboards_partial_update0

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_read(self):
        """Test case for v3_dashboards_read

        Retrieves the specified dashboard.  # noqa: E501
        """
        pass

    def test_v3_dashboards_reports_create(self):
        """Test case for v3_dashboards_reports_create

        """
        pass

    def test_v3_dashboards_reports_delete(self):
        """Test case for v3_dashboards_reports_delete

        """
        pass

    def test_v3_dashboards_reports_delete_0(self):
        """Test case for v3_dashboards_reports_delete_0

        """
        pass

    def test_v3_dashboards_reports_export_pdf(self):
        """Test case for v3_dashboards_reports_export_pdf

        """
        pass

    def test_v3_dashboards_reports_list(self):
        """Test case for v3_dashboards_reports_list

        """
        pass

    def test_v3_dashboards_reports_partial_update(self):
        """Test case for v3_dashboards_reports_partial_update

        """
        pass

    def test_v3_dashboards_reports_partial_update0(self):
        """Test case for v3_dashboards_reports_partial_update0

        """
        pass

    def test_v3_dashboards_reports_read(self):
        """Test case for v3_dashboards_reports_read

        Override to include widget result serializer  # noqa: E501
        """
        pass

    def test_v3_dashboards_reports_search(self):
        """Test case for v3_dashboards_reports_search

        """
        pass

    def test_v3_dashboards_schedule_create(self):
        """Test case for v3_dashboards_schedule_create

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_schedule_delete(self):
        """Test case for v3_dashboards_schedule_delete

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_schedule_delete_0(self):
        """Test case for v3_dashboards_schedule_delete_0

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_schedule_list(self):
        """Test case for v3_dashboards_schedule_list

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_schedule_partial_update(self):
        """Test case for v3_dashboards_schedule_partial_update

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_schedule_partial_update0(self):
        """Test case for v3_dashboards_schedule_partial_update0

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_schedule_read(self):
        """Test case for v3_dashboards_schedule_read

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_schedule_update(self):
        """Test case for v3_dashboards_schedule_update

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_schedules_list(self):
        """Test case for v3_dashboards_schedules_list

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_search(self):
        """Test case for v3_dashboards_search

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_subscribe(self):
        """Test case for v3_dashboards_subscribe

        Subscribes/Unsubscribes the current user from receiving  # noqa: E501
        """
        pass

    def test_v3_dashboards_widgets_create(self):
        """Test case for v3_dashboards_widgets_create

        Creates a widget for the specified dashboard.  # noqa: E501
        """
        pass

    def test_v3_dashboards_widgets_delete(self):
        """Test case for v3_dashboards_widgets_delete

        Deletes all widgets from the specified dashboard.  # noqa: E501
        """
        pass

    def test_v3_dashboards_widgets_delete_0(self):
        """Test case for v3_dashboards_widgets_delete_0

        Deletes a widget from the specified dashboard.  # noqa: E501
        """
        pass

    def test_v3_dashboards_widgets_list(self):
        """Test case for v3_dashboards_widgets_list

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_widgets_partial_update(self):
        """Test case for v3_dashboards_widgets_partial_update

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_widgets_partial_update0(self):
        """Test case for v3_dashboards_widgets_partial_update0

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_widgets_perform_search(self):
        """Test case for v3_dashboards_widgets_perform_search

        Returns the results of a dashboard widget.  # noqa: E501
        """
        pass

    def test_v3_dashboards_widgets_read(self):
        """Test case for v3_dashboards_widgets_read

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_widgets_search(self):
        """Test case for v3_dashboards_widgets_search

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_dashboards_widgets_update(self):
        """Test case for v3_dashboards_widgets_update

        Updates all widgets for the specified dashboard.  # noqa: E501
        """
        pass

    def test_v3_domains_resolve_list(self):
        """Test case for v3_domains_resolve_list

        """
        pass

    def test_v3_fields_analytics_list(self):
        """Test case for v3_fields_analytics_list

        """
        pass

    def test_v3_indicators_stream_list(self):
        """Test case for v3_indicators_stream_list

        """
        pass

    def test_v3_indicators_stream_read(self):
        """Test case for v3_indicators_stream_read

        """
        pass

    def test_v3_intel_context_characteristics_list(self):
        """Test case for v3_intel_context_characteristics_list

        """
        pass

    def test_v3_lists_create(self):
        """Test case for v3_lists_create

        Returns a list of Lists.  You can search for specific lists by name,  # noqa: E501
        """
        pass

    def test_v3_lists_delete(self):
        """Test case for v3_lists_delete

        Returns a list of Lists.  You can search for specific lists by name,  # noqa: E501
        """
        pass

    def test_v3_lists_export_all(self):
        """Test case for v3_lists_export_all

        Creates an export file in JSON format.  # noqa: E501
        """
        pass

    def test_v3_lists_export_single(self):
        """Test case for v3_lists_export_single

        Exports the specified case to a JSON file.  # noqa: E501
        """
        pass

    def test_v3_lists_items_create(self):
        """Test case for v3_lists_items_create

        Overrides the default 'create' method in order to associate the  # noqa: E501
        """
        pass

    def test_v3_lists_items_delete(self):
        """Test case for v3_lists_items_delete

        Deletes list items from the specified list. You cannot delete items from internal or protected lists.  # noqa: E501
        """
        pass

    def test_v3_lists_items_delete_0(self):
        """Test case for v3_lists_items_delete_0

        Exports list items as a JSON file.  # noqa: E501
        """
        pass

    def test_v3_lists_items_export(self):
        """Test case for v3_lists_items_export

        Exports the specified list as a JSON file.  # noqa: E501
        """
        pass

    def test_v3_lists_items_export_single(self):
        """Test case for v3_lists_items_export_single

        Exports the specified case to a JSON file.  # noqa: E501
        """
        pass

    def test_v3_lists_items_list(self):
        """Test case for v3_lists_items_list

        Exports list items as a JSON file.  # noqa: E501
        """
        pass

    def test_v3_lists_items_partial_update(self):
        """Test case for v3_lists_items_partial_update

        Exports list items as a JSON file.  # noqa: E501
        """
        pass

    def test_v3_lists_items_partial_update0(self):
        """Test case for v3_lists_items_partial_update0

        Exports list items as a JSON file.  # noqa: E501
        """
        pass

    def test_v3_lists_items_read(self):
        """Test case for v3_lists_items_read

        Exports list items as a JSON file.  # noqa: E501
        """
        pass

    def test_v3_lists_items_search(self):
        """Test case for v3_lists_items_search

        Exports list items as a JSON file.  # noqa: E501
        """
        pass

    def test_v3_lists_items_types_list(self):
        """Test case for v3_lists_items_types_list

        Returns all list item types and their labels.  # noqa: E501
        """
        pass

    def test_v3_lists_items_upload(self):
        """Test case for v3_lists_items_upload

        Imports list items into the specified list.  # noqa: E501
        """
        pass

    def test_v3_lists_list(self):
        """Test case for v3_lists_list

        Returns a list of Lists.  You can search for specific lists by name,  # noqa: E501
        """
        pass

    def test_v3_lists_partial_update(self):
        """Test case for v3_lists_partial_update

        Returns a list of Lists.  You can search for specific lists by name,  # noqa: E501
        """
        pass

    def test_v3_lists_partial_update0(self):
        """Test case for v3_lists_partial_update0

        Returns a list of Lists.  You can search for specific lists by name,  # noqa: E501
        """
        pass

    def test_v3_lists_read(self):
        """Test case for v3_lists_read

        Returns a list of Lists.  You can search for specific lists by name,  # noqa: E501
        """
        pass

    def test_v3_lists_search(self):
        """Test case for v3_lists_search

        Returns a list of Lists.  You can search for specific lists by name,  # noqa: E501
        """
        pass

    def test_v3_patterndb_create(self):
        """Test case for v3_patterndb_create

        """
        pass

    def test_v3_patterndb_delete(self):
        """Test case for v3_patterndb_delete

        """
        pass

    def test_v3_patterndb_export(self):
        """Test case for v3_patterndb_export

        """
        pass

    def test_v3_patterndb_list(self):
        """Test case for v3_patterndb_list

        """
        pass

    def test_v3_playbooks_create(self):
        """Test case for v3_playbooks_create

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_playbooks_delete(self):
        """Test case for v3_playbooks_delete

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_playbooks_list(self):
        """Test case for v3_playbooks_list

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_playbooks_partial_update(self):
        """Test case for v3_playbooks_partial_update

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_playbooks_partial_update0(self):
        """Test case for v3_playbooks_partial_update0

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_playbooks_plays_create(self):
        """Test case for v3_playbooks_plays_create

        Override the default create method to add playbook_id  # noqa: E501
        """
        pass

    def test_v3_playbooks_plays_list(self):
        """Test case for v3_playbooks_plays_list

        Override the default list method to add playbook_id  # noqa: E501
        """
        pass

    def test_v3_playbooks_read(self):
        """Test case for v3_playbooks_read

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_plays_create(self):
        """Test case for v3_plays_create

        Override the default create method to add playbook_id  # noqa: E501
        """
        pass

    def test_v3_plays_delete(self):
        """Test case for v3_plays_delete

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_plays_list(self):
        """Test case for v3_plays_list

        Override the default list method to add playbook_id  # noqa: E501
        """
        pass

    def test_v3_plays_partial_update(self):
        """Test case for v3_plays_partial_update

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_plays_partial_update0(self):
        """Test case for v3_plays_partial_update0

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_plays_read(self):
        """Test case for v3_plays_read

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_preferences_cms_url(self):
        """Test case for v3_preferences_cms_url

        Specifies the Network (CMS) URL used by Helix.  # noqa: E501
        """
        pass

    def test_v3_preferences_etp_url(self):
        """Test case for v3_preferences_etp_url

        Specifies the Email (ETP) URL used by Helix.  # noqa: E501
        """
        pass

    def test_v3_preferences_hx_url(self):
        """Test case for v3_preferences_hx_url

        Specifies the Endpoint (HX) URLs used by Helix.  # noqa: E501
        """
        pass

    def test_v3_reports_create(self):
        """Test case for v3_reports_create

        """
        pass

    def test_v3_reports_delete(self):
        """Test case for v3_reports_delete

        """
        pass

    def test_v3_reports_delete_0(self):
        """Test case for v3_reports_delete_0

        """
        pass

    def test_v3_reports_export_pdf(self):
        """Test case for v3_reports_export_pdf

        """
        pass

    def test_v3_reports_list(self):
        """Test case for v3_reports_list

        """
        pass

    def test_v3_reports_partial_update(self):
        """Test case for v3_reports_partial_update

        """
        pass

    def test_v3_reports_partial_update0(self):
        """Test case for v3_reports_partial_update0

        """
        pass

    def test_v3_reports_read(self):
        """Test case for v3_reports_read

        Override to include widget result serializer  # noqa: E501
        """
        pass

    def test_v3_reports_search(self):
        """Test case for v3_reports_search

        """
        pass

    def test_v3_reports_widgets_create(self):
        """Test case for v3_reports_widgets_create

        """
        pass

    def test_v3_reports_widgets_delete(self):
        """Test case for v3_reports_widgets_delete

        """
        pass

    def test_v3_reports_widgets_list(self):
        """Test case for v3_reports_widgets_list

        """
        pass

    def test_v3_reports_widgets_partial_update(self):
        """Test case for v3_reports_widgets_partial_update

        """
        pass

    def test_v3_reports_widgets_partial_update0(self):
        """Test case for v3_reports_widgets_partial_update0

        """
        pass

    def test_v3_reports_widgets_read(self):
        """Test case for v3_reports_widgets_read

        """
        pass

    def test_v3_reports_widgets_view_results(self):
        """Test case for v3_reports_widgets_view_results

        """
        pass

    def test_v3_rules_assertions_list(self):
        """Test case for v3_rules_assertions_list

        Lists rule assertions, including:  # noqa: E501
        """
        pass

    def test_v3_rules_assertions_read(self):
        """Test case for v3_rules_assertions_read

        Lists rule assertions, including:  # noqa: E501
        """
        pass

    def test_v3_rules_create(self):
        """Test case for v3_rules_create

        """
        pass

    def test_v3_rules_dependencies_list(self):
        """Test case for v3_rules_dependencies_list

        Lists rule dependencies, including:  # noqa: E501
        """
        pass

    def test_v3_rules_dependencies_read(self):
        """Test case for v3_rules_dependencies_read

        Lists rule dependencies, including:  # noqa: E501
        """
        pass

    def test_v3_rules_get_enabled_rule_percentages_history(self):
        """Test case for v3_rules_get_enabled_rule_percentages_history

        Calculates a collection of hourly values from the current hour the method is called and the zeroed-out time from today.  # noqa: E501
        """
        pass

    def test_v3_rules_get_revisions(self):
        """Test case for v3_rules_get_revisions

        Returns the revision history of the specified rule.  # noqa: E501
        """
        pass

    def test_v3_rules_get_rules_recommendations(self):
        """Test case for v3_rules_get_rules_recommendations

        Provides class/field recommendations based on the number of impacted rules.  # noqa: E501
        """
        pass

    def test_v3_rules_list(self):
        """Test case for v3_rules_list

        """
        pass

    def test_v3_rules_read(self):
        """Test case for v3_rules_read

        """
        pass

    def test_v3_search_saved_create(self):
        """Test case for v3_search_saved_create

        Creates a new search. Defining `is_favorite` is optional.  # noqa: E501
        """
        pass

    def test_v3_search_saved_delete(self):
        """Test case for v3_search_saved_delete

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_favorite_create(self):
        """Test case for v3_search_saved_favorite_create

        Overrides the default 'create' method in order to associate the  # noqa: E501
        """
        pass

    def test_v3_search_saved_favorite_delete(self):
        """Test case for v3_search_saved_favorite_delete

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_favorite_delete_0(self):
        """Test case for v3_search_saved_favorite_delete_0

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_favorite_list(self):
        """Test case for v3_search_saved_favorite_list

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_favorite_partial_update(self):
        """Test case for v3_search_saved_favorite_partial_update

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_favorite_partial_update0(self):
        """Test case for v3_search_saved_favorite_partial_update0

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_favorite_read(self):
        """Test case for v3_search_saved_favorite_read

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_list(self):
        """Test case for v3_search_saved_list

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_partial_update(self):
        """Test case for v3_search_saved_partial_update

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_partial_update0(self):
        """Test case for v3_search_saved_partial_update0

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_read(self):
        """Test case for v3_search_saved_read

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_schedule_create(self):
        """Test case for v3_search_saved_schedule_create

        Overrides the default 'create' method in order to associate the  # noqa: E501
        """
        pass

    def test_v3_search_saved_schedule_delete(self):
        """Test case for v3_search_saved_schedule_delete

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_schedule_delete_0(self):
        """Test case for v3_search_saved_schedule_delete_0

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_schedule_jobs_download(self):
        """Test case for v3_search_saved_schedule_jobs_download

        Downloads the results of a scheduled search job as a zip file.  # noqa: E501
        """
        pass

    def test_v3_search_saved_schedule_jobs_list(self):
        """Test case for v3_search_saved_schedule_jobs_list

        Endpoint for accessing scheduled search jobs.  # noqa: E501
        """
        pass

    def test_v3_search_saved_schedule_jobs_read(self):
        """Test case for v3_search_saved_schedule_jobs_read

        Endpoint for accessing scheduled search jobs.  # noqa: E501
        """
        pass

    def test_v3_search_saved_schedule_list(self):
        """Test case for v3_search_saved_schedule_list

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_schedule_partial_update(self):
        """Test case for v3_search_saved_schedule_partial_update

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_schedule_partial_update0(self):
        """Test case for v3_search_saved_schedule_partial_update0

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_schedule_read(self):
        """Test case for v3_search_saved_schedule_read

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_schedule_update(self):
        """Test case for v3_search_saved_schedule_update

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_saved_search(self):
        """Test case for v3_search_saved_search

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_search_stats_get_indexing_latency(self):
        """Test case for v3_search_stats_get_indexing_latency

        """
        pass

    def test_v3_search_tables_create(self):
        """Test case for v3_search_tables_create

        Endpoint for accessing search tables.  # noqa: E501
        """
        pass

    def test_v3_search_tables_delete(self):
        """Test case for v3_search_tables_delete

        Deletes the specified search table. You can only delete tables that you created.  # noqa: E501
        """
        pass

    def test_v3_search_tables_list(self):
        """Test case for v3_search_tables_list

        Endpoint for accessing search tables.  # noqa: E501
        """
        pass

    def test_v3_search_tables_partial_update(self):
        """Test case for v3_search_tables_partial_update

        Endpoint for accessing search tables.  # noqa: E501
        """
        pass

    def test_v3_search_tables_partial_update0(self):
        """Test case for v3_search_tables_partial_update0

        Endpoint for accessing search tables.  # noqa: E501
        """
        pass

    def test_v3_search_tables_read(self):
        """Test case for v3_search_tables_read

        Endpoint for accessing search tables.  # noqa: E501
        """
        pass

    def test_v3_senders_create(self):
        """Test case for v3_senders_create

        """
        pass

    def test_v3_senders_delete(self):
        """Test case for v3_senders_delete

        """
        pass

    def test_v3_senders_enable_delete(self):
        """Test case for v3_senders_enable_delete

        """
        pass

    def test_v3_senders_enable_update(self):
        """Test case for v3_senders_enable_update

        """
        pass

    def test_v3_senders_read(self):
        """Test case for v3_senders_read

        """
        pass

    def test_v3_sensors_create(self):
        """Test case for v3_sensors_create

        """
        pass

    def test_v3_sensors_delete(self):
        """Test case for v3_sensors_delete

        """
        pass

    def test_v3_sensors_get_sensor_status(self):
        """Test case for v3_sensors_get_sensor_status

        Returns the status of your FireEye sensors.  # noqa: E501
        """
        pass

    def test_v3_sensors_list(self):
        """Test case for v3_sensors_list

        Lists your FireEye sensors, including metrics for input events and average CPU and memory usage.  # noqa: E501
        """
        pass

    def test_v3_sensors_partial_update(self):
        """Test case for v3_sensors_partial_update

        """
        pass

    def test_v3_sensors_partial_update0(self):
        """Test case for v3_sensors_partial_update0

        """
        pass

    def test_v3_sensors_read(self):
        """Test case for v3_sensors_read

        """
        pass

    def test_v3_tags_list(self):
        """Test case for v3_tags_list

        """
        pass

    def test_v3_tasks_status_read(self):
        """Test case for v3_tasks_status_read

        """
        pass

    def test_v3_user_challenge_query(self):
        """Test case for v3_user_challenge_query

        Returns a token to use for Talk to an Expert.  # noqa: E501
        """
        pass

    def test_v3_user_customer_support_chat(self):
        """Test case for v3_user_customer_support_chat

        Connects to SFDC to chat with FireEye Support.  # noqa: E501
        """
        pass

    def test_v3_user_eod_chat(self):
        """Test case for v3_user_eod_chat

        Returns Expert on Demand contact information for authorized users.  # noqa: E501
        """
        pass

    def test_v3_widgets_templates_create(self):
        """Test case for v3_widgets_templates_create

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_widgets_templates_delete(self):
        """Test case for v3_widgets_templates_delete

        Deletes all widgets from the specified dashboard.  # noqa: E501
        """
        pass

    def test_v3_widgets_templates_delete_0(self):
        """Test case for v3_widgets_templates_delete_0

        Deletes a widget from the specified dashboard.  # noqa: E501
        """
        pass

    def test_v3_widgets_templates_list(self):
        """Test case for v3_widgets_templates_list

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_widgets_templates_partial_update(self):
        """Test case for v3_widgets_templates_partial_update

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_widgets_templates_partial_update0(self):
        """Test case for v3_widgets_templates_partial_update0

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_widgets_templates_perform_search(self):
        """Test case for v3_widgets_templates_perform_search

        Returns the results of a dashboard widget.  # noqa: E501
        """
        pass

    def test_v3_widgets_templates_read(self):
        """Test case for v3_widgets_templates_read

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_widgets_templates_search(self):
        """Test case for v3_widgets_templates_search

        View for tying together the serializer, authentication, permission and  # noqa: E501
        """
        pass

    def test_v3_widgets_templates_update(self):
        """Test case for v3_widgets_templates_update

        Updates all widgets for the specified dashboard.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
