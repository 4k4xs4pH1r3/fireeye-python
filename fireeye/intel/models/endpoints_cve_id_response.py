# coding: utf-8

"""
    Intel API v3 - Simplified Intel API

    FireEye Intel API - Simplified Intelligence  # noqa: E501

    The version of the OpenAPI document: 1.0
    Contact: support@fireeye.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from fireeye.intel.configuration import Configuration


class EndpointsCveIdResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'created': 'str',
        'modified': 'str',
        'risk_rating': 'list[str]',
        'exploit_consequence': 'str',
        'ease_of_attack': 'list[str]',
        'cve_identifier': 'str',
        'vulnerability_type': 'str',
        'exploit_rating': 'str',
        'vendor_fix_details': 'list[object]',
        'actors': 'list[ObjectCommonProperties]',
        'reports': 'list[ObjectCommonProperties]',
        'mitigation': 'str',
        'in_the_wild': 'bool',
        'overview': 'str',
        'zero_day': 'bool',
        'date_of_disclouse': 'str',
        'exploit_vector': 'list[str]',
        'description': 'str',
        'name': 'str',
        'label': 'str',
        'vulnerability_score': 'object'
    }

    attribute_map = {
        'id': 'id',
        'created': 'created',
        'modified': 'modified',
        'risk_rating': 'risk_rating',
        'exploit_consequence': 'exploit_consequence',
        'ease_of_attack': 'ease_of_attack',
        'cve_identifier': 'cve_identifier',
        'vulnerability_type': 'vulnerability_type',
        'exploit_rating': 'exploit_rating',
        'vendor_fix_details': 'vendor_fix_details',
        'actors': 'actors',
        'reports': 'reports',
        'mitigation': 'mitigation',
        'in_the_wild': 'in_the_wild',
        'overview': 'overview',
        'zero_day': 'zero_day',
        'date_of_disclouse': 'date_of_disclouse',
        'exploit_vector': 'exploit_vector',
        'description': 'description',
        'name': 'name',
        'label': 'label',
        'vulnerability_score': 'vulnerability_score'
    }

    def __init__(self, id=None, created=None, modified=None, risk_rating=None, exploit_consequence=None, ease_of_attack=None, cve_identifier=None, vulnerability_type=None, exploit_rating=None, vendor_fix_details=None, actors=None, reports=None, mitigation=None, in_the_wild=None, overview=None, zero_day=None, date_of_disclouse=None, exploit_vector=None, description=None, name=None, label=None, vulnerability_score=None, local_vars_configuration=None):  # noqa: E501
        """EndpointsCveIdResponse - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._created = None
        self._modified = None
        self._risk_rating = None
        self._exploit_consequence = None
        self._ease_of_attack = None
        self._cve_identifier = None
        self._vulnerability_type = None
        self._exploit_rating = None
        self._vendor_fix_details = None
        self._actors = None
        self._reports = None
        self._mitigation = None
        self._in_the_wild = None
        self._overview = None
        self._zero_day = None
        self._date_of_disclouse = None
        self._exploit_vector = None
        self._description = None
        self._name = None
        self._label = None
        self._vulnerability_score = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if created is not None:
            self.created = created
        if modified is not None:
            self.modified = modified
        if risk_rating is not None:
            self.risk_rating = risk_rating
        if exploit_consequence is not None:
            self.exploit_consequence = exploit_consequence
        if ease_of_attack is not None:
            self.ease_of_attack = ease_of_attack
        if cve_identifier is not None:
            self.cve_identifier = cve_identifier
        if vulnerability_type is not None:
            self.vulnerability_type = vulnerability_type
        if exploit_rating is not None:
            self.exploit_rating = exploit_rating
        if vendor_fix_details is not None:
            self.vendor_fix_details = vendor_fix_details
        if actors is not None:
            self.actors = actors
        if reports is not None:
            self.reports = reports
        if mitigation is not None:
            self.mitigation = mitigation
        if in_the_wild is not None:
            self.in_the_wild = in_the_wild
        if overview is not None:
            self.overview = overview
        if zero_day is not None:
            self.zero_day = zero_day
        if date_of_disclouse is not None:
            self.date_of_disclouse = date_of_disclouse
        if exploit_vector is not None:
            self.exploit_vector = exploit_vector
        if description is not None:
            self.description = description
        if name is not None:
            self.name = name
        if label is not None:
            self.label = label
        if vulnerability_score is not None:
            self.vulnerability_score = vulnerability_score

    @property
    def id(self):
        """Gets the id of this EndpointsCveIdResponse.  # noqa: E501


        :return: The id of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EndpointsCveIdResponse.


        :param id: The id of this EndpointsCveIdResponse.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def created(self):
        """Gets the created of this EndpointsCveIdResponse.  # noqa: E501


        :return: The created of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this EndpointsCveIdResponse.


        :param created: The created of this EndpointsCveIdResponse.  # noqa: E501
        :type: str
        """

        self._created = created

    @property
    def modified(self):
        """Gets the modified of this EndpointsCveIdResponse.  # noqa: E501


        :return: The modified of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: str
        """
        return self._modified

    @modified.setter
    def modified(self, modified):
        """Sets the modified of this EndpointsCveIdResponse.


        :param modified: The modified of this EndpointsCveIdResponse.  # noqa: E501
        :type: str
        """

        self._modified = modified

    @property
    def risk_rating(self):
        """Gets the risk_rating of this EndpointsCveIdResponse.  # noqa: E501


        :return: The risk_rating of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._risk_rating

    @risk_rating.setter
    def risk_rating(self, risk_rating):
        """Sets the risk_rating of this EndpointsCveIdResponse.


        :param risk_rating: The risk_rating of this EndpointsCveIdResponse.  # noqa: E501
        :type: list[str]
        """

        self._risk_rating = risk_rating

    @property
    def exploit_consequence(self):
        """Gets the exploit_consequence of this EndpointsCveIdResponse.  # noqa: E501


        :return: The exploit_consequence of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: str
        """
        return self._exploit_consequence

    @exploit_consequence.setter
    def exploit_consequence(self, exploit_consequence):
        """Sets the exploit_consequence of this EndpointsCveIdResponse.


        :param exploit_consequence: The exploit_consequence of this EndpointsCveIdResponse.  # noqa: E501
        :type: str
        """

        self._exploit_consequence = exploit_consequence

    @property
    def ease_of_attack(self):
        """Gets the ease_of_attack of this EndpointsCveIdResponse.  # noqa: E501


        :return: The ease_of_attack of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._ease_of_attack

    @ease_of_attack.setter
    def ease_of_attack(self, ease_of_attack):
        """Sets the ease_of_attack of this EndpointsCveIdResponse.


        :param ease_of_attack: The ease_of_attack of this EndpointsCveIdResponse.  # noqa: E501
        :type: list[str]
        """

        self._ease_of_attack = ease_of_attack

    @property
    def cve_identifier(self):
        """Gets the cve_identifier of this EndpointsCveIdResponse.  # noqa: E501


        :return: The cve_identifier of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: str
        """
        return self._cve_identifier

    @cve_identifier.setter
    def cve_identifier(self, cve_identifier):
        """Sets the cve_identifier of this EndpointsCveIdResponse.


        :param cve_identifier: The cve_identifier of this EndpointsCveIdResponse.  # noqa: E501
        :type: str
        """

        self._cve_identifier = cve_identifier

    @property
    def vulnerability_type(self):
        """Gets the vulnerability_type of this EndpointsCveIdResponse.  # noqa: E501


        :return: The vulnerability_type of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: str
        """
        return self._vulnerability_type

    @vulnerability_type.setter
    def vulnerability_type(self, vulnerability_type):
        """Sets the vulnerability_type of this EndpointsCveIdResponse.


        :param vulnerability_type: The vulnerability_type of this EndpointsCveIdResponse.  # noqa: E501
        :type: str
        """

        self._vulnerability_type = vulnerability_type

    @property
    def exploit_rating(self):
        """Gets the exploit_rating of this EndpointsCveIdResponse.  # noqa: E501


        :return: The exploit_rating of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: str
        """
        return self._exploit_rating

    @exploit_rating.setter
    def exploit_rating(self, exploit_rating):
        """Sets the exploit_rating of this EndpointsCveIdResponse.


        :param exploit_rating: The exploit_rating of this EndpointsCveIdResponse.  # noqa: E501
        :type: str
        """

        self._exploit_rating = exploit_rating

    @property
    def vendor_fix_details(self):
        """Gets the vendor_fix_details of this EndpointsCveIdResponse.  # noqa: E501


        :return: The vendor_fix_details of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: list[object]
        """
        return self._vendor_fix_details

    @vendor_fix_details.setter
    def vendor_fix_details(self, vendor_fix_details):
        """Sets the vendor_fix_details of this EndpointsCveIdResponse.


        :param vendor_fix_details: The vendor_fix_details of this EndpointsCveIdResponse.  # noqa: E501
        :type: list[object]
        """

        self._vendor_fix_details = vendor_fix_details

    @property
    def actors(self):
        """Gets the actors of this EndpointsCveIdResponse.  # noqa: E501


        :return: The actors of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: list[ObjectCommonProperties]
        """
        return self._actors

    @actors.setter
    def actors(self, actors):
        """Sets the actors of this EndpointsCveIdResponse.


        :param actors: The actors of this EndpointsCveIdResponse.  # noqa: E501
        :type: list[ObjectCommonProperties]
        """

        self._actors = actors

    @property
    def reports(self):
        """Gets the reports of this EndpointsCveIdResponse.  # noqa: E501


        :return: The reports of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: list[ObjectCommonProperties]
        """
        return self._reports

    @reports.setter
    def reports(self, reports):
        """Sets the reports of this EndpointsCveIdResponse.


        :param reports: The reports of this EndpointsCveIdResponse.  # noqa: E501
        :type: list[ObjectCommonProperties]
        """

        self._reports = reports

    @property
    def mitigation(self):
        """Gets the mitigation of this EndpointsCveIdResponse.  # noqa: E501


        :return: The mitigation of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: str
        """
        return self._mitigation

    @mitigation.setter
    def mitigation(self, mitigation):
        """Sets the mitigation of this EndpointsCveIdResponse.


        :param mitigation: The mitigation of this EndpointsCveIdResponse.  # noqa: E501
        :type: str
        """

        self._mitigation = mitigation

    @property
    def in_the_wild(self):
        """Gets the in_the_wild of this EndpointsCveIdResponse.  # noqa: E501


        :return: The in_the_wild of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: bool
        """
        return self._in_the_wild

    @in_the_wild.setter
    def in_the_wild(self, in_the_wild):
        """Sets the in_the_wild of this EndpointsCveIdResponse.


        :param in_the_wild: The in_the_wild of this EndpointsCveIdResponse.  # noqa: E501
        :type: bool
        """

        self._in_the_wild = in_the_wild

    @property
    def overview(self):
        """Gets the overview of this EndpointsCveIdResponse.  # noqa: E501


        :return: The overview of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: str
        """
        return self._overview

    @overview.setter
    def overview(self, overview):
        """Sets the overview of this EndpointsCveIdResponse.


        :param overview: The overview of this EndpointsCveIdResponse.  # noqa: E501
        :type: str
        """

        self._overview = overview

    @property
    def zero_day(self):
        """Gets the zero_day of this EndpointsCveIdResponse.  # noqa: E501


        :return: The zero_day of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: bool
        """
        return self._zero_day

    @zero_day.setter
    def zero_day(self, zero_day):
        """Sets the zero_day of this EndpointsCveIdResponse.


        :param zero_day: The zero_day of this EndpointsCveIdResponse.  # noqa: E501
        :type: bool
        """

        self._zero_day = zero_day

    @property
    def date_of_disclouse(self):
        """Gets the date_of_disclouse of this EndpointsCveIdResponse.  # noqa: E501


        :return: The date_of_disclouse of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: str
        """
        return self._date_of_disclouse

    @date_of_disclouse.setter
    def date_of_disclouse(self, date_of_disclouse):
        """Sets the date_of_disclouse of this EndpointsCveIdResponse.


        :param date_of_disclouse: The date_of_disclouse of this EndpointsCveIdResponse.  # noqa: E501
        :type: str
        """

        self._date_of_disclouse = date_of_disclouse

    @property
    def exploit_vector(self):
        """Gets the exploit_vector of this EndpointsCveIdResponse.  # noqa: E501


        :return: The exploit_vector of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._exploit_vector

    @exploit_vector.setter
    def exploit_vector(self, exploit_vector):
        """Sets the exploit_vector of this EndpointsCveIdResponse.


        :param exploit_vector: The exploit_vector of this EndpointsCveIdResponse.  # noqa: E501
        :type: list[str]
        """

        self._exploit_vector = exploit_vector

    @property
    def description(self):
        """Gets the description of this EndpointsCveIdResponse.  # noqa: E501


        :return: The description of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this EndpointsCveIdResponse.


        :param description: The description of this EndpointsCveIdResponse.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this EndpointsCveIdResponse.  # noqa: E501


        :return: The name of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EndpointsCveIdResponse.


        :param name: The name of this EndpointsCveIdResponse.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def label(self):
        """Gets the label of this EndpointsCveIdResponse.  # noqa: E501


        :return: The label of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this EndpointsCveIdResponse.


        :param label: The label of this EndpointsCveIdResponse.  # noqa: E501
        :type: str
        """

        self._label = label

    @property
    def vulnerability_score(self):
        """Gets the vulnerability_score of this EndpointsCveIdResponse.  # noqa: E501


        :return: The vulnerability_score of this EndpointsCveIdResponse.  # noqa: E501
        :rtype: object
        """
        return self._vulnerability_score

    @vulnerability_score.setter
    def vulnerability_score(self, vulnerability_score):
        """Sets the vulnerability_score of this EndpointsCveIdResponse.


        :param vulnerability_score: The vulnerability_score of this EndpointsCveIdResponse.  # noqa: E501
        :type: object
        """

        self._vulnerability_score = vulnerability_score

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EndpointsCveIdResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, EndpointsCveIdResponse):
            return True

        return self.to_dict() != other.to_dict()
