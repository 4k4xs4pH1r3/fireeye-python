# coding: utf-8

"""
    Detection On Demand

    FireEye offers a best-in-class virtual execution engine in many of its core products, including our Network Security, Email Security, and File Analysis solutions. Now our customers can interact with and consume those capabilities directly via a scalable and performant web service. Use the new RESTful API to submit files for malware analysis, search hash values for past analysis results, get full reports for your file submissions, and integrate into your existing toolsets and workflows.  # noqa: E501

    The version of the OpenAPI document: 1.1.1
    Contact: developers@fireeye.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from feye_detection.configuration import Configuration


class ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'job_id': 'int',
        'payload': 'str',
        'dns_name': 'str',
        'net_proto': 'int',
        'service_port': 'int'
    }

    attribute_map = {
        'job_id': 'job_id',
        'payload': 'payload',
        'dns_name': 'dns_name',
        'net_proto': 'net_proto',
        'service_port': 'service_port'
    }

    def __init__(self, job_id=None, payload=None, dns_name=None, net_proto=None, service_port=None, local_vars_configuration=None):  # noqa: E501
        """ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._job_id = None
        self._payload = None
        self._dns_name = None
        self._net_proto = None
        self._service_port = None
        self.discriminator = None

        if job_id is not None:
            self.job_id = job_id
        if payload is not None:
            self.payload = payload
        if dns_name is not None:
            self.dns_name = dns_name
        if net_proto is not None:
            self.net_proto = net_proto
        if service_port is not None:
            self.service_port = service_port

    @property
    def job_id(self):
        """Gets the job_id of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501


        :return: The job_id of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501
        :rtype: int
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.


        :param job_id: The job_id of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501
        :type: int
        """

        self._job_id = job_id

    @property
    def payload(self):
        """Gets the payload of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501


        :return: The payload of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501
        :rtype: str
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.


        :param payload: The payload of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501
        :type: str
        """

        self._payload = payload

    @property
    def dns_name(self):
        """Gets the dns_name of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501


        :return: The dns_name of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501
        :rtype: str
        """
        return self._dns_name

    @dns_name.setter
    def dns_name(self, dns_name):
        """Sets the dns_name of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.


        :param dns_name: The dns_name of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501
        :type: str
        """

        self._dns_name = dns_name

    @property
    def net_proto(self):
        """Gets the net_proto of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501


        :return: The net_proto of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501
        :rtype: int
        """
        return self._net_proto

    @net_proto.setter
    def net_proto(self, net_proto):
        """Sets the net_proto of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.


        :param net_proto: The net_proto of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501
        :type: int
        """

        self._net_proto = net_proto

    @property
    def service_port(self):
        """Gets the service_port of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501


        :return: The service_port of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501
        :rtype: int
        """
        return self._service_port

    @service_port.setter
    def service_port(self, service_port):
        """Sets the service_port of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.


        :param service_port: The service_port of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly.  # noqa: E501
        :type: int
        """

        self._service_port = service_port

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoNetworkAnomaly):
            return True

        return self.to_dict() != other.to_dict()
