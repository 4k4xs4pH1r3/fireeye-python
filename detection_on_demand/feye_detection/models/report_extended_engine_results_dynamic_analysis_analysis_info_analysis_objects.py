# coding: utf-8

"""
    Detection On Demand

    FireEye offers a best-in-class virtual execution engine in many of its core products, including our Network Security, Email Security, and File Analysis solutions. Now our customers can interact with and consume those capabilities directly via a scalable and performant web service. Use the new RESTful API to submit files for malware analysis, search hash values for past analysis results, get full reports for your file submissions, and integrate into your existing toolsets and workflows.  # noqa: E501

    The version of the OpenAPI document: 1.1.1
    Contact: developers@fireeye.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from feye_detection.configuration import Configuration


class ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'sha256': 'str',
        'chk_sum': 'list[ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoChkSum]',
        'md5_sum': 'str',
        'is_child': 'bool',
        'file_desc': 'str',
        'work_orders': 'list[ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoWorkOrders]',
        'original_name': 'str'
    }

    attribute_map = {
        'sha256': 'sha256',
        'chk_sum': 'chk_sum',
        'md5_sum': 'md5_sum',
        'is_child': 'is_child',
        'file_desc': 'file_desc',
        'work_orders': 'work_orders',
        'original_name': 'original_name'
    }

    def __init__(self, sha256=None, chk_sum=None, md5_sum=None, is_child=None, file_desc=None, work_orders=None, original_name=None, local_vars_configuration=None):  # noqa: E501
        """ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._sha256 = None
        self._chk_sum = None
        self._md5_sum = None
        self._is_child = None
        self._file_desc = None
        self._work_orders = None
        self._original_name = None
        self.discriminator = None

        self.sha256 = sha256
        self.chk_sum = chk_sum
        self.md5_sum = md5_sum
        self.is_child = is_child
        self.file_desc = file_desc
        self.work_orders = work_orders
        self.original_name = original_name

    @property
    def sha256(self):
        """Gets the sha256 of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501

        sha256 of analysed object  # noqa: E501

        :return: The sha256 of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: str
        """
        return self._sha256

    @sha256.setter
    def sha256(self, sha256):
        """Sets the sha256 of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.

        sha256 of analysed object  # noqa: E501

        :param sha256: The sha256 of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and sha256 is None:  # noqa: E501
            raise ValueError("Invalid value for `sha256`, must not be `None`")  # noqa: E501

        self._sha256 = sha256

    @property
    def chk_sum(self):
        """Gets the chk_sum of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501

        results of different static analysis engines ran for object  # noqa: E501

        :return: The chk_sum of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: list[ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoChkSum]
        """
        return self._chk_sum

    @chk_sum.setter
    def chk_sum(self, chk_sum):
        """Sets the chk_sum of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.

        results of different static analysis engines ran for object  # noqa: E501

        :param chk_sum: The chk_sum of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: list[ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoChkSum]
        """
        if self.local_vars_configuration.client_side_validation and chk_sum is None:  # noqa: E501
            raise ValueError("Invalid value for `chk_sum`, must not be `None`")  # noqa: E501

        self._chk_sum = chk_sum

    @property
    def md5_sum(self):
        """Gets the md5_sum of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501

        md5 of analysed object  # noqa: E501

        :return: The md5_sum of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: str
        """
        return self._md5_sum

    @md5_sum.setter
    def md5_sum(self, md5_sum):
        """Sets the md5_sum of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.

        md5 of analysed object  # noqa: E501

        :param md5_sum: The md5_sum of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and md5_sum is None:  # noqa: E501
            raise ValueError("Invalid value for `md5_sum`, must not be `None`")  # noqa: E501

        self._md5_sum = md5_sum

    @property
    def is_child(self):
        """Gets the is_child of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501

        Whether this file is a child of another. The file could contain other files or other embedded objects.  # noqa: E501

        :return: The is_child of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: bool
        """
        return self._is_child

    @is_child.setter
    def is_child(self, is_child):
        """Sets the is_child of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.

        Whether this file is a child of another. The file could contain other files or other embedded objects.  # noqa: E501

        :param is_child: The is_child of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: bool
        """
        if self.local_vars_configuration.client_side_validation and is_child is None:  # noqa: E501
            raise ValueError("Invalid value for `is_child`, must not be `None`")  # noqa: E501
        allowed_values = [true, false]  # noqa: E501
        if self.local_vars_configuration.client_side_validation and is_child not in allowed_values:  # noqa: E501
            raise ValueError(
                "Invalid value for `is_child` ({0}), must be one of {1}"  # noqa: E501
                .format(is_child, allowed_values)
            )

        self._is_child = is_child

    @property
    def file_desc(self):
        """Gets the file_desc of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501

        File extension of analysed object  # noqa: E501

        :return: The file_desc of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: str
        """
        return self._file_desc

    @file_desc.setter
    def file_desc(self, file_desc):
        """Sets the file_desc of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.

        File extension of analysed object  # noqa: E501

        :param file_desc: The file_desc of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and file_desc is None:  # noqa: E501
            raise ValueError("Invalid value for `file_desc`, must not be `None`")  # noqa: E501

        self._file_desc = file_desc

    @property
    def work_orders(self):
        """Gets the work_orders of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501

        details results of Dynamic analysis jobs ran for analysis object  # noqa: E501

        :return: The work_orders of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: list[ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoWorkOrders]
        """
        return self._work_orders

    @work_orders.setter
    def work_orders(self, work_orders):
        """Sets the work_orders of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.

        details results of Dynamic analysis jobs ran for analysis object  # noqa: E501

        :param work_orders: The work_orders of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: list[ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoWorkOrders]
        """
        if self.local_vars_configuration.client_side_validation and work_orders is None:  # noqa: E501
            raise ValueError("Invalid value for `work_orders`, must not be `None`")  # noqa: E501

        self._work_orders = work_orders

    @property
    def original_name(self):
        """Gets the original_name of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501

        File name of a analysis object  # noqa: E501

        :return: The original_name of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: str
        """
        return self._original_name

    @original_name.setter
    def original_name(self, original_name):
        """Sets the original_name of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.

        File name of a analysis object  # noqa: E501

        :param original_name: The original_name of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and original_name is None:  # noqa: E501
            raise ValueError("Invalid value for `original_name`, must not be `None`")  # noqa: E501

        self._original_name = original_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects):
            return True

        return self.to_dict() != other.to_dict()
