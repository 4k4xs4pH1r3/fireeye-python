# coding: utf-8

"""
    Detection On Demand

    FireEye offers a best-in-class virtual execution engine in many of its core products, including our Network Security, Email Security, and File Analysis solutions. Now our customers can interact with and consume those capabilities directly via a scalable and performant web service. Use the new RESTful API to submit files for malware analysis, search hash values for past analysis results, get full reports for your file submissions, and integrate into your existing toolsets and workflows.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: developers@fireeye.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'int',
        'job_id': 'int',
        'weight': 'int',
        'class_type': 'str',
        'display_message': 'str'
    }

    attribute_map = {
        'id': 'id',
        'job_id': 'job_id',
        'weight': 'weight',
        'class_type': 'class_type',
        'display_message': 'display_message'
    }

    def __init__(self, id=None, job_id=None, weight=None, class_type=None, display_message=None, local_vars_configuration=None):  # noqa: E501
        """ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._job_id = None
        self._weight = None
        self._class_type = None
        self._display_message = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if job_id is not None:
            self.job_id = job_id
        if weight is not None:
            self.weight = weight
        if class_type is not None:
            self.class_type = class_type
        if display_message is not None:
            self.display_message = display_message

    @property
    def id(self):
        """Gets the id of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501


        :return: The id of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.


        :param id: The id of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def job_id(self):
        """Gets the job_id of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501


        :return: The job_id of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501
        :rtype: int
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.


        :param job_id: The job_id of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501
        :type: int
        """

        self._job_id = job_id

    @property
    def weight(self):
        """Gets the weight of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501


        :return: The weight of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.


        :param weight: The weight of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501
        :type: int
        """

        self._weight = weight

    @property
    def class_type(self):
        """Gets the class_type of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501


        :return: The class_type of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501
        :rtype: str
        """
        return self._class_type

    @class_type.setter
    def class_type(self, class_type):
        """Sets the class_type of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.


        :param class_type: The class_type of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501
        :type: str
        """

        self._class_type = class_type

    @property
    def display_message(self):
        """Gets the display_message of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501


        :return: The display_message of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501
        :rtype: str
        """
        return self._display_message

    @display_message.setter
    def display_message(self, display_message):
        """Sets the display_message of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.


        :param display_message: The display_message of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults.  # noqa: E501
        :type: str
        """

        self._display_message = display_message

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrdersOsChangesCorrelationResults):
            return True

        return self.to_dict() != other.to_dict()
