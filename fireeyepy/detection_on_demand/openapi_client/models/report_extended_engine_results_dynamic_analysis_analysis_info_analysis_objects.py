# coding: utf-8

"""
    Detection On Demand

    FireEye offers a best-in-class virtual execution engine in many of its core products, including our Network Security, Email Security, and File Analysis solutions. Now our customers can interact with and consume those capabilities directly via a scalable and performant web service. Use the new RESTful API to submit files for malware analysis, search hash values for past analysis results, get full reports for your file submissions, and integrate into your existing toolsets and workflows.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: developers@fireeye.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'uuid': 'str',
        'is_url': 'bool',
        'chk_sum': 'ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsChkSum',
        'is_child': 'bool',
        'da_weight': 'int',
        'file_desc': 'str',
        'signature': 'str',
        'work_orders': 'ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrders',
        'original_name': 'str'
    }

    attribute_map = {
        'uuid': 'uuid',
        'is_url': 'is_url',
        'chk_sum': 'chk_sum',
        'is_child': 'is_child',
        'da_weight': 'da_weight',
        'file_desc': 'file_desc',
        'signature': 'signature',
        'work_orders': 'work_orders',
        'original_name': 'original_name'
    }

    def __init__(self, uuid=None, is_url=None, chk_sum=None, is_child=None, da_weight=None, file_desc=None, signature=None, work_orders=None, original_name=None, local_vars_configuration=None):  # noqa: E501
        """ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._uuid = None
        self._is_url = None
        self._chk_sum = None
        self._is_child = None
        self._da_weight = None
        self._file_desc = None
        self._signature = None
        self._work_orders = None
        self._original_name = None
        self.discriminator = None

        if uuid is not None:
            self.uuid = uuid
        if is_url is not None:
            self.is_url = is_url
        if chk_sum is not None:
            self.chk_sum = chk_sum
        if is_child is not None:
            self.is_child = is_child
        if da_weight is not None:
            self.da_weight = da_weight
        if file_desc is not None:
            self.file_desc = file_desc
        if signature is not None:
            self.signature = signature
        if work_orders is not None:
            self.work_orders = work_orders
        if original_name is not None:
            self.original_name = original_name

    @property
    def uuid(self):
        """Gets the uuid of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501


        :return: The uuid of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.


        :param uuid: The uuid of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: str
        """

        self._uuid = uuid

    @property
    def is_url(self):
        """Gets the is_url of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501


        :return: The is_url of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: bool
        """
        return self._is_url

    @is_url.setter
    def is_url(self, is_url):
        """Sets the is_url of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.


        :param is_url: The is_url of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: bool
        """
        allowed_values = [true, false]  # noqa: E501
        if self.local_vars_configuration.client_side_validation and is_url not in allowed_values:  # noqa: E501
            raise ValueError(
                "Invalid value for `is_url` ({0}), must be one of {1}"  # noqa: E501
                .format(is_url, allowed_values)
            )

        self._is_url = is_url

    @property
    def chk_sum(self):
        """Gets the chk_sum of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501


        :return: The chk_sum of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsChkSum
        """
        return self._chk_sum

    @chk_sum.setter
    def chk_sum(self, chk_sum):
        """Sets the chk_sum of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.


        :param chk_sum: The chk_sum of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsChkSum
        """

        self._chk_sum = chk_sum

    @property
    def is_child(self):
        """Gets the is_child of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501

        Whether this file is a child of another. The file could contain other files or other embedded objects.  # noqa: E501

        :return: The is_child of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: bool
        """
        return self._is_child

    @is_child.setter
    def is_child(self, is_child):
        """Sets the is_child of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.

        Whether this file is a child of another. The file could contain other files or other embedded objects.  # noqa: E501

        :param is_child: The is_child of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: bool
        """
        allowed_values = [true, false]  # noqa: E501
        if self.local_vars_configuration.client_side_validation and is_child not in allowed_values:  # noqa: E501
            raise ValueError(
                "Invalid value for `is_child` ({0}), must be one of {1}"  # noqa: E501
                .format(is_child, allowed_values)
            )

        self._is_child = is_child

    @property
    def da_weight(self):
        """Gets the da_weight of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501

        The degree of maliciousness.  100 is considered malicious, and higher numbers indicate a greater degree of maliciousness.  # noqa: E501

        :return: The da_weight of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: int
        """
        return self._da_weight

    @da_weight.setter
    def da_weight(self, da_weight):
        """Sets the da_weight of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.

        The degree of maliciousness.  100 is considered malicious, and higher numbers indicate a greater degree of maliciousness.  # noqa: E501

        :param da_weight: The da_weight of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: int
        """

        self._da_weight = da_weight

    @property
    def file_desc(self):
        """Gets the file_desc of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501


        :return: The file_desc of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: str
        """
        return self._file_desc

    @file_desc.setter
    def file_desc(self, file_desc):
        """Sets the file_desc of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.


        :param file_desc: The file_desc of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: str
        """

        self._file_desc = file_desc

    @property
    def signature(self):
        """Gets the signature of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501


        :return: The signature of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: str
        """
        return self._signature

    @signature.setter
    def signature(self, signature):
        """Sets the signature of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.


        :param signature: The signature of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: str
        """

        self._signature = signature

    @property
    def work_orders(self):
        """Gets the work_orders of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501


        :return: The work_orders of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrders
        """
        return self._work_orders

    @work_orders.setter
    def work_orders(self, work_orders):
        """Sets the work_orders of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.


        :param work_orders: The work_orders of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjectsWorkOrders
        """

        self._work_orders = work_orders

    @property
    def original_name(self):
        """Gets the original_name of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501


        :return: The original_name of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :rtype: str
        """
        return self._original_name

    @original_name.setter
    def original_name(self, original_name):
        """Sets the original_name of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.


        :param original_name: The original_name of this ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects.  # noqa: E501
        :type: str
        """

        self._original_name = original_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ReportExtendedEngineResultsDynamicAnalysisAnalysisInfoAnalysisObjects):
            return True

        return self.to_dict() != other.to_dict()
